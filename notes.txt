----extensions----
c# dev kit
material icon theme
nuget gallery
sqlite viewer
sqlite
Angular Language Service
ESlint

----nuget packages----
Microsoft.entityframeworkcore.design
Microsoft.entityframeworkcore.sqlite

----tools
dotnet tool install -g dotnet-ef
 - dotnet ef migrations add InitialCreate -o Data/Migrations
 - dotnet ef database update

-----Installer----
 install chocolatey
    - powershell -c "irm https://community.chocolatey.org/install.ps1|iex"
install node js
    - choco install nodejs --version="22.17.1"
install angular
    - npm install -g @angular/cli

-----Styling----
Tailwind and DaisyUI - since its a framework not dependent to angular unlike 3rd party tools

--------------==Setting Tips==---------------
File > auto save - this is to auto save changes
Settings > Terminal Suggest enabled - to enable the intellisense
Settings > search 'brackets' > auto closing > always 
Settings > search 'linked' > link editing > checked
-------------for long path in the terminal
cmd         - just type "prompt $g"
gitbash     - export PS1="\W\$ "
            - echo 'export PS1="\W\$ "' >> ~/.bashrc (to be permanent)
powershell  - type "$profile"
            - if ps1 not exist create it and put the below code then open new terminal.
            function prompt {
                $p = -path
                "$p> "
            }
            or this one to display the project folder
            function prompt {
                $currentPath = Get-Location
                $projectName = Split-Path $currentPath.Path -Leaf
                "$projectName> "
            }

----Insert sample data into a Users table----
INSERT INTO Users (Id, Name, Email)
VALUES
    ('bob-id', 'bob', 'bob@gmail.com'),
    ('tom-id', 'tom', 'tom@gmail.com'),
    ('jane-id', 'jane', 'jane@gmail.com');

--------------==Angular Life Cycle==--------------------
ngOnChanges
Called when input properties change (runs before anything else if there are @Input properties).

ngOnInit
Called once after the first ngOnChanges. Good for initialization logic (fetch data, set up state).

ngDoCheck
Called during every change detection run (custom change detection).

ngAfterContentInit
Called once after Angular projects external content into the component (using <ng-content>).

ngAfterContentChecked
Called after every check of projected content.

ngAfterViewInit
Called once after the component’s view and child views are initialized.

ngAfterViewChecked
Called after every check of the component’s view and child views.

ngOnDestroy
Called just before Angular destroys the component (cleanup, unsubscribe, remove listeners).

Summary:

Initialization: ngOnChanges → ngOnInit
Change detection: ngDoCheck
Content projection: ngAfterContentInit → ngAfterContentChecked
View initialization: ngAfterViewInit → ngAfterViewChecked
Cleanup: ngOnDestroy

--------------==CLI Commands==--------------------
----------------angular
ng new client
ng serve
----------------dotnet
dotnet new webapi -h
dotnet new list
dotnet sln -h
dotnet sln list
dotnet dev-certs -h
dotnet dev-certs https --check

dotnet new sln
dotnet new webapi -controllers -n API
dotnet sln add API
    --use the below if you encounter self signed cert issue
    dotnet dev-certs https --clean
    dotnet dev-certs https --trust
    --end
dotnet watch
----------------git
git clone https://github.com/rgerero/datingapp-ng.git
remove track files in a cache
 - git rm -r --cached .